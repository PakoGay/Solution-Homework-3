public interface IDungeonBuilder {
    IDungeonBuilder setDungeonName(String name);
    IDungeonBuilder addRoom(Room room);
    IDungeonBuilder addNPC(NPC npc);
    Dungeon build();
}
import java.util.ArrayList;
import java.util.List;

public class SimpleDungeonBuilder implements IDungeonBuilder {
    private String name;
    private List<Room> rooms = new ArrayList<>();
    private List<NPC> npcs = new ArrayList<>();
    public IDungeonBuilder setDungeonName(String name) {
        this.name = name;
        return this;
    }
    public IDungeonBuilder addRoom(Room room) {
        rooms.add(room);
        return this;
    }
    public IDungeonBuilder addNPC(NPC npc) {
        npcs.add(npc);
        return this;
    }
    public Dungeon build() {
        return new Dungeon(name, rooms, npcs);
    }
}
import java.util.ArrayList;
import java.util.List;

public class Dungeon {
    private String name;
    private List<Room> rooms = new ArrayList<>();
    private List<NPC> npcs = new ArrayList<>();
    public Dungeon(String name, List<Room> rooms, List<NPC> npcs) {
        this.name = name;
        this.rooms = rooms;
        this.npcs = npcs;
    }
    public void showInfo() {
        System.out.println("Dungeon:" + name);
        System.out.println("Rooms:");
        rooms.forEach(room -> System.out.println("  - " + room.getName()));
        System.out.println("NPCs:");
        npcs.forEach(npc -> System.out.println("  - " + npc.getName()));
    }
}
public interface ICloneableGameEntity {
    ICloneableGameEntity cloneEntity();
}
public class Room implements ICloneableGameEntity {
    private String name;
    public Room(String name) { this.name = name; }
    public String getName() { return name; }
    public ICloneableGameEntity cloneEntity() { return new Room(this.name + " (Clone)"); }
}
public class NPC implements ICloneableGameEntity {
    private String name;
    public NPC(String name) { this.name = name; }
    public String getName() { return name; }
    public ICloneableGameEntity cloneEntity() { return new NPC(this.name + " (Clone)"); }
}
public class MUDPrototypeDemo {
    public static void main(String[] args) {
        Room originalRoom = new Room("Treasure Room");
        Room clonedRoom = (Room) originalRoom.cloneEntity();
        System.out.println("Original Room: " + originalRoom.getName());
        System.out.println("Cloned Room: " + clonedRoom.getName());
    }
}
public class MUDBuilderDemo {
    public static void main(String[] args) {
        Dungeon dungeon = new SimpleDungeonBuilder()
                .setDungeonName("Dark Cave")
                .addRoom(new Room("Entrance"))
                .addRoom(new Room("Hall"))
                .addNPC(new NPC("Goblin"))
                .build();
        dungeon.showInfo();
    }
}
public class MUDCombinedDemo {
    public static void main(String[] args) {
        Room baseRoom = new Room("Corridor");
        Dungeon dungeon = new SimpleDungeonBuilder()
                .setDungeonName("Haunted Castle")
                .addRoom(baseRoom)
                .addRoom((Room) baseRoom.cloneEntity())
                .addNPC(new NPC("Ghost"))
                .build();
        dungeon.showInfo();
    }
}
